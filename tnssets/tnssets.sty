% ---------------------- %
% -- IMPORTS REQUIRED -- %
% ---------------------- %

% A
\RequirePackage{amssymb}
% D
\RequirePackage{dsfont}
% F
\RequirePackage{forloop}
% M
\RequirePackage{mathrsfs}
\RequirePackage{mathtools}
% R
\RequirePackage{relsize}
% S
\RequirePackage{stackengine}
\RequirePackage{stmaryrd}
% T
\RequirePackage{tnscom}
% X
\RequirePackage{xstring}
% Y
\RequirePackage{yhmath}


% ------------------ %
% -- GENERAL SETS -- %
% ------------------ %

% General sets

\newcommand\setgene{\@ifstar{\tnssets@set@gene@star}{\tnssets@set@gene@no@star}}


\newcommand\tnssets@set@gene@no@star[1]{%
    \tns@generic@interval@ext{\{}{#1}{}{}{\}}%
}

\newcommand\tnssets@set@gene@star[1]{%
    \tns@generic@interval@semi@ext{\{}{#1}{}{}{\}}%
}


% Probabilistic sets

\newcommand\setproba{\@ifstar{\tnssets@set@proba@star}{\tnssets@set@proba@no@star}}

\newcommand\tnssets@set@proba@no@star[1]{
    \IfSubStr{,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,}{,#1,}{
        \mathcal{#1}
    }{%
        \PackageError{tnssets}{Command << setproba >> only accepts single upper case letters}%
    }
}

\newcommand\tnssets@set@proba@star[2]{%
    \tnssets@set@proba@no@star{#1}_{#2}
}


% Geometric sets
%
% With ''mathscr'', we only have the upper case letters.
% So we use the following trick for lower case letters.
%
% Source:
%    * page 68 de ''The Comprehensive LATEX Symbol List''

\DeclareMathAlphabet{\mathpzc}{OT1}{pzc}{m}{it}

\newcommand\setgeo{\@ifstar{\tnssets@set@geo@star}{\tnssets@set@geo@no@star}}

\newcommand\tnssets@set@geo@no@star[1]{
    \IfSubStr{,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,}{,#1,}{
        \mathscr{#1}
    }{%
        \IfSubStr{,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,}{,#1,}{
            \mathpzc{#1}
        }{%
            \PackageError{tnssets}{Command << fieldset >> only accepts single h, k or upper case letter}%
        }
    }
}

\newcommand\tnssets@set@geo@star[2]{%
    \tnssets@set@geo@no@star{#1}_{#2}
}


% Sets for algebra
%
% Only the upper case letters and also h and k.
%
% With ''\mathbb'', there are only the upper case letters.

\newcommand\setalge{\@ifstar{\tnssets@set@alge@star}{\tnssets@set@alge@no@star}}

\newcommand\tnssets@set@alge@no@star[1]{
    \IfSubStr{,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,h,k,}{,#1,}{
        \mathds{#1}
    }{%
        \PackageError{tnssets}{Command << fieldset >> only accepts letters h or k alone, and upper case letters}%
    }
}

\newcommand\tnssets@set@alge@star[2]{%
    \tnssets@set@alge@no@star{#1}_{#2}
}


% Tools for classical sets

\newcommand\setpos{\textbf{\tiny+}}
\newcommand\setneg{\vphantom{\setpos}-}
\newcommand\set@star{\text{*}}

\newcommand\setspecial{\@ifstar{\tnssets@set@special@star}{\tnssets@set@special@no@star}}

\newcommand\tnssets@set@special@no@star[2]{
    \IfEqCase{#2}{
        {s}{ #1^{\set@star} }
        {n}{ #1^{\phantom{\set@star}}_{\setneg} }
        {p}{ #1^{\phantom{\set@star}}_{\setpos} }
        {sn}{ #1^{\set@star}_{\setneg} }
        {sp}{ #1^{\set@star}_{\setpos} }
    }
}

\newcommand\tnssets@set@special@star[2]{
    \IfEqCase{#2}{
        {s}{ #1_{\neq 0} }
        {n}{ #1_{\le 0} }
        {p}{ #1_{\ge 0} }
        {sn}{ #1_{< 0} }
        {sp}{ #1_{> 0} }
    }
}


% The empty set

\newcommand\nullset{%
    \ensuremath{\text{\scalebox{1.2}{$\varnothing$}}}%
}


% List of classical sets - START

\newcommand\NN{\ensuremath{\setalge{N}}}
\newcommand\NNs{\ensuremath{\setspecial{\NN}{s}}}

\newcommand\PP{\ensuremath{\setalge{P}}}

\newcommand\ZZ{\ensuremath{\setalge{Z}}}
\newcommand\ZZp{\ensuremath{\setspecial{\ZZ}{p}}}
\newcommand\ZZn{\ensuremath{\setspecial{\ZZ}{n}}}
\newcommand\ZZs{\ensuremath{\setspecial{\ZZ}{s}}}
\newcommand\ZZsn{\ensuremath{\setspecial{\ZZ}{sn}}}
\newcommand\ZZsp{\ensuremath{\setspecial{\ZZ}{sp}}}

\newcommand\DD{\ensuremath{\setalge{D}}}
\newcommand\DDp{\ensuremath{\setspecial{\DD}{p}}}
\newcommand\DDn{\ensuremath{\setspecial{\DD}{n}}}
\newcommand\DDs{\ensuremath{\setspecial{\DD}{s}}}
\newcommand\DDsn{\ensuremath{\setspecial{\DD}{sn}}}
\newcommand\DDsp{\ensuremath{\setspecial{\DD}{sp}}}

\newcommand\QQ{\ensuremath{\setalge{Q}}}
\newcommand\QQp{\ensuremath{\setspecial{\QQ}{p}}}
\newcommand\QQn{\ensuremath{\setspecial{\QQ}{n}}}
\newcommand\QQs{\ensuremath{\setspecial{\QQ}{s}}}
\newcommand\QQsn{\ensuremath{\setspecial{\QQ}{sn}}}
\newcommand\QQsp{\ensuremath{\setspecial{\QQ}{sp}}}

\newcommand\RR{\ensuremath{\setalge{R}}}
\newcommand\RRp{\ensuremath{\setspecial{\RR}{p}}}
\newcommand\RRn{\ensuremath{\setspecial{\RR}{n}}}
\newcommand\RRs{\ensuremath{\setspecial{\RR}{s}}}
\newcommand\RRsn{\ensuremath{\setspecial{\RR}{sn}}}
\newcommand\RRsp{\ensuremath{\setspecial{\RR}{sp}}}

\newcommand\CC{\ensuremath{\setalge{C}}}
\newcommand\CCs{\ensuremath{\setspecial{\CC}{s}}}

\newcommand\HH{\ensuremath{\setalge{H}}}
\newcommand\HHs{\ensuremath{\setspecial{\HH}{s}}}

\newcommand\OO{\ensuremath{\setalge{O}}}
\newcommand\OOs{\ensuremath{\setspecial{\OO}{s}}}

\newcommand\FF{\ensuremath{\setalge{F}}}
\newcommand\FFp{\ensuremath{\setspecial{\FF}{p}}}
\newcommand\FFn{\ensuremath{\setspecial{\FF}{n}}}
\newcommand\FFs{\ensuremath{\setspecial{\FF}{s}}}
\newcommand\FFsn{\ensuremath{\setspecial{\FF}{sn}}}
\newcommand\FFsp{\ensuremath{\setspecial{\FF}{sp}}}

% List of classical sets - END


% --------------- %
% -- INTERVALS -- %
% --------------- %

% Macros for intervals - START

% Macros for french real intervals

\newcommand\intervalCO{\@ifstar{\tnssets@intervalCO@star}{\tnssets@intervalCO@no@star}}
\newcommand\tnssets@intervalCO@no@star[2]{\ensuremath{\tns@generic@interval@ext{[}{#1}{\tnsmathsep}{#2}{[}}}
\newcommand\tnssets@intervalCO@star[2]{\ensuremath{\tns@generic@interval@semi@ext{[}{#1}{\tnsmathsep}{#2}{[}}}

\newcommand\intervalC{\@ifstar{\tnssets@intervalC@star}{\tnssets@intervalC@no@star}}
\newcommand\tnssets@intervalC@no@star[2]{\ensuremath{\tns@generic@interval@ext{[}{#1}{\tnsmathsep}{#2}{]}}}
\newcommand\tnssets@intervalC@star[2]{\ensuremath{\tns@generic@interval@semi@ext{[}{#1}{\tnsmathsep}{#2}{]}}}

\newcommand\intervalO{\@ifstar{\tnssets@intervalO@star}{\tnssets@intervalO@no@star}}
\newcommand\tnssets@intervalO@no@star[2]{\ensuremath{\tns@generic@interval@ext{]}{#1}{\tnsmathsep}{#2}{[}}}
\newcommand\tnssets@intervalO@star[2]{\ensuremath{\tns@generic@interval@semi@ext{]}{#1}{\tnsmathsep}{#2}{[}}}

\newcommand\intervalOC{\@ifstar{\tnssets@intervalOC@star}{\tnssets@intervalOC@no@star}}
\newcommand\tnssets@intervalOC@no@star[2]{\ensuremath{\tns@generic@interval@ext{]}{#1}{\tnsmathsep}{#2}{]}}}
\newcommand\tnssets@intervalOC@star[2]{\ensuremath{\tns@generic@interval@semi@ext{]}{#1}{\tnsmathsep}{#2}{]}}}

% Macros for american real intervals

\newcommand\intervalCP{\@ifstar{\tnssets@intervalCP@star}{\tnssets@intervalCP@no@star}}
\newcommand\tnssets@intervalCP@no@star[2]{\ensuremath{\tns@generic@interval@ext{[}{#1}{\tnsmathsep}{#2}{)}}}
\newcommand\tnssets@intervalCP@star[2]{\ensuremath{\tns@generic@interval@semi@ext{[}{#1}{\tnsmathsep}{#2}{)}}}

\newcommand\intervalP{\@ifstar{\tnssets@intervalP@star}{\tnssets@intervalP@no@star}}
\newcommand\tnssets@intervalP@no@star[2]{\ensuremath{\tns@generic@interval@ext{(}{#1}{\tnsmathsep}{#2}{)}}}
\newcommand\tnssets@intervalP@star[2]{\ensuremath{\tns@generic@interval@semi@ext{(}{#1}{\tnsmathsep}{#2}{)}}}

\newcommand\intervalPC{\@ifstar{\tnssets@intervalPC@star}{\tnssets@intervalPC@no@star}}
\newcommand\tnssets@intervalPC@no@star[2]{\ensuremath{\tns@generic@interval@ext{(}{#1}{\tnsmathsep}{#2}{]}}}
\newcommand\tnssets@intervalPC@star[2]{\ensuremath{\tns@generic@interval@semi@ext{(}{#1}{\tnsmathsep}{#2}{]}}}

% Macros for discrete intervals

\newcommand\ZintervalCO{\@ifstar{\tnssets@ZintervalCO@star}{\tnssets@ZintervalCO@no@star}}
\newcommand\tnssets@ZintervalCO@no@star[2]{\ensuremath{\tns@generic@interval@ext{\llbracket}{#1}{\tnsmathsep}{#2}{\llbracket}}}
\newcommand\tnssets@ZintervalCO@star[2]{\ensuremath{\tns@generic@interval@semi@ext{\llbracket}{#1}{\tnsmathsep}{#2}{\llbracket}}}

\newcommand\ZintervalC{\@ifstar{\tnssets@ZintervalC@star}{\tnssets@ZintervalC@no@star}}
\newcommand\tnssets@ZintervalC@no@star[2]{\ensuremath{\tns@generic@interval@ext{\llbracket}{#1}{\tnsmathsep}{#2}{\rrbracket}}}
\newcommand\tnssets@ZintervalC@star[2]{\ensuremath{\tns@generic@interval@semi@ext{\llbracket}{#1}{\tnsmathsep}{#2}{\rrbracket}}}

\newcommand\ZintervalO{\@ifstar{\tnssets@ZintervalO@star}{\tnssets@ZintervalO@no@star}}
\newcommand\tnssets@ZintervalO@no@star[2]{\ensuremath{\tns@generic@interval@ext{\rrbracket}{#1}{\tnsmathsep}{#2}{\llbracket}}}
\newcommand\tnssets@ZintervalO@star[2]{\ensuremath{\tns@generic@interval@semi@ext{\rrbracket}{#1}{\tnsmathsep}{#2}{\llbracket}}}

\newcommand\ZintervalOC{\@ifstar{\tnssets@ZintervalOC@star}{\tnssets@ZintervalOC@no@star}}
\newcommand\tnssets@ZintervalOC@no@star[2]{\ensuremath{\tns@generic@interval@ext{\rrbracket}{#1}{\tnsmathsep}{#2}{\rrbracket}}}
\newcommand\tnssets@ZintervalOC@star[2]{\ensuremath{\tns@generic@interval@semi@ext{\rrbracket}{#1}{\tnsmathsep}{#2}{\rrbracket}}}

% Macros for intervals - END


% --------------- %
% -- OPERATORS -- %
% --------------- %

\newcommand\@display@this[3]{\mathop{\raisebox{#1}{\scalebox{#2}{$#3$}}}\limits}

\newcommand\dcup{\@display@this{.05em}{0.8}{\bigcup}}
\newcommand\dsqcup{\@display@this{.05em}{0.8}{\bigsqcup}}
\newcommand\dcap{\@display@this{.05em}{0.8}{\bigcap}}


% ---------------- %
% -- IMAGE N CO -- %
% ---------------- %

\newcommand\card{\@ifstar{\tnssets@card@star}{\tnssets@card@no@star}}

\DeclareMathOperator{\tnssets@card@no@star}{\operatorname{card}}

\newcommand\tnssets@card@star{\#}


\DeclareMathOperator{\im}{\operatorname{im}}
\DeclareMathOperator{\dom}{\operatorname{dom}}
\DeclareMathOperator{\codom}{\operatorname{codom}}


% ----------------- %
% -- APPLICATONS -- %
% ----------------- %

\newcommand\@rel@scale[3]{\mathrel{\scalebox{#1}[#2]{$#3$}}}

\newcommand\onetoone{\@rel@scale{1.1}{1.3}{\rightarrowtail}}
\newcommand\onto{\@rel@scale{1.1}{1.3}{\twoheadrightarrow}}
\newcommand\biject{\mathrel{\mathrlap{\onetoone}\mkern0.9mu\onto}}
 
    
\newcommand\tnsgeo@partial@deco[3]{\stackMath\mathrel{\stackinset{c}{#1}{c}{#2}{\scalebox{1}[0.4]{$\vert$}}{#3}}}

\newcommand\pto{\tnsgeo@partial@deco{-0.1ex}{0.15ex}{\to}}
\newcommand\ponetoone{\tnsgeo@partial@deco{0ex}{0ex}{\onetoone}}
\newcommand\ponto{\tnsgeo@partial@deco{-0.3ex}{0ex}{\onto}}
\newcommand\pbiject{\tnsgeo@partial@deco{-0.25ex}{0ex}{\biject}}


% ----------------- %
% -- COMPOSITION -- %
% ----------------- %

\newcommand\compo{%
	\operatorname{\text{\raise0.15ex\hbox{\scalebox{0.75}{$\circ$}}}}%
}

%    #1: option for the formatting.
%
%    #2: the function.
%    #3: the order.

\newcommand\multicompo[3][r]{%
	\IfEqCase{#1}{%
        {r}{\let\callit\tnssets@multi@compo@rafter}%
        {exp}{\let\callit\tnssets@multi@compo@expand}%
        {dot}{\let\callit\tnssets@multi@compo@dot}%
    }[%
        \PackageError{tnssets}{unknown option}%
                              {you can use c (default), e, exp and dot}%
    ]%
    %
    \callit{#2}{#3}%
}


\newcommand\tnssets@multi@compo@rafter[2]{%
	#1^{\kern.1ex\langle\kern.15ex#2\kern.15ex\rangle}%
}


\newcommand\tnssets@multi@compo@dot[2]{%
	#1 \compo \cdots \compo #1%
}


\newcounter{tnssets@multi@compo@counter}

\newcommand\tnssets@multi@compo@expand[2]{%
	#1%
	\forloop{tnssets@multi@compo@counter}%
	        {1}%
	        {\value{tnssets@multi@compo@counter} < #2}{%
    	 \compo #1%
    }%
}
